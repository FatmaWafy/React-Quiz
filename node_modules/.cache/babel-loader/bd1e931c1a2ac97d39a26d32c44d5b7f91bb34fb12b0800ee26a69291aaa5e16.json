{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\waafy\\\\Downloads\\\\Compressed\\\\Jonas_React\\\\10-react-quiz\\\\starter\\\\src\\\\components\\\\FinishScreen.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FinishScreen(_ref) {\n  let {\n    points,\n    maxPossiblePoints,\n    highscore,\n    dispatch\n  } = _ref;\n  const percentage = points / maxPossiblePoints * 100;\n  let emoji;\n  if (percentage === 100) emoji = \"ðŸ¥‡\";\n  if (percentage >= 80 && percentage < 100) emoji = \"ðŸŽ‰\";\n  if (percentage >= 50 && percentage < 80) emoji = \"ðŸ˜Š\";\n  if (percentage >= 0 && percentage < 50) emoji = \"ðŸ¤¨\";\n  if (percentage === 0) emoji = \"ðŸ¥¹\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), \" you scored \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: points\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 41\n      }, this), \" out of\", \" \", maxPossiblePoints, \" (\", Math.ceil(percentage), \"%)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"highscore\",\n      children: [\"(Highscore: \", highscore, \" points)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-ui\",\n      onClick: () => dispatch({\n        type: \"restart\"\n      }),\n      children: \"Restart Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = FinishScreen;\nexport default FinishScreen;\nvar _c;\n$RefreshReg$(_c, \"FinishScreen\");","map":{"version":3,"names":["FinishScreen","_ref","points","maxPossiblePoints","highscore","dispatch","percentage","emoji","_jsxDEV","_Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Math","ceil","onClick","type","_c","$RefreshReg$"],"sources":["C:/Users/waafy/Downloads/Compressed/Jonas_React/10-react-quiz/starter/src/components/FinishScreen.js"],"sourcesContent":["function FinishScreen({ points, maxPossiblePoints, highscore, dispatch }) {\r\n  const percentage = (points / maxPossiblePoints) * 100;\r\n\r\n  let emoji;\r\n  if (percentage === 100) emoji = \"ðŸ¥‡\";\r\n  if (percentage >= 80 && percentage < 100) emoji = \"ðŸŽ‰\";\r\n  if (percentage >= 50 && percentage < 80) emoji = \"ðŸ˜Š\";\r\n  if (percentage >= 0 && percentage < 50) emoji = \"ðŸ¤¨\";\r\n  if (percentage === 0) emoji = \"ðŸ¥¹\";\r\n\r\n  return (\r\n    <>\r\n      <p className='result'>\r\n        <span>{emoji}</span> you scored <strong>{points}</strong> out of{\" \"}\r\n        {maxPossiblePoints} ({Math.ceil(percentage)}%)\r\n      </p>\r\n      <p className='highscore'>(Highscore: {highscore} points)</p>\r\n      <button\r\n        className='btn btn-ui'\r\n        onClick={() => dispatch({ type: \"restart\" })}\r\n      >\r\n        Restart Quiz\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FinishScreen;\r\n"],"mappings":";;;AAAA,SAASA,YAAYA,CAAAC,IAAA,EAAqD;EAAA,IAApD;IAAEC,MAAM;IAAEC,iBAAiB;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EACtE,MAAMK,UAAU,GAAIJ,MAAM,GAAGC,iBAAiB,GAAI,GAAG;EAErD,IAAII,KAAK;EACT,IAAID,UAAU,KAAK,GAAG,EAAEC,KAAK,GAAG,IAAI;EACpC,IAAID,UAAU,IAAI,EAAE,IAAIA,UAAU,GAAG,GAAG,EAAEC,KAAK,GAAG,IAAI;EACtD,IAAID,UAAU,IAAI,EAAE,IAAIA,UAAU,GAAG,EAAE,EAAEC,KAAK,GAAG,IAAI;EACrD,IAAID,UAAU,IAAI,CAAC,IAAIA,UAAU,GAAG,EAAE,EAAEC,KAAK,GAAG,IAAI;EACpD,IAAID,UAAU,KAAK,CAAC,EAAEC,KAAK,GAAG,IAAI;EAElC,oBACEC,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACEF,OAAA;MAAGG,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACnBF,OAAA;QAAAE,QAAA,EAAOH;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,gBAAY,eAAAP,OAAA;QAAAE,QAAA,EAASR;MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU,WAAO,EAAC,GAAG,EACnEZ,iBAAiB,EAAC,IAAE,EAACa,IAAI,CAACC,IAAI,CAACX,UAAU,CAAC,EAAC,IAC9C;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACJP,OAAA;MAAGG,SAAS,EAAC,WAAW;MAAAD,QAAA,GAAC,cAAY,EAACN,SAAS,EAAC,UAAQ;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAC5DP,OAAA;MACEG,SAAS,EAAC,YAAY;MACtBO,OAAO,EAAEA,CAAA,KAAMb,QAAQ,CAAC;QAAEc,IAAI,EAAE;MAAU,CAAC,CAAE;MAAAT,QAAA,EAC9C;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA,gBACR;AAEP;AAACK,EAAA,GAzBQpB,YAAY;AA2BrB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}